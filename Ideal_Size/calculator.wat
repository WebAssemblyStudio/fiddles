(module
 (type $iii (func (param i32 i32) (result i32)))
 (memory $0 1)
 (export "add" (func $add))
 (export "subtract" (func $subtract))
 (export "multiply" (func $multiply))
 (export "divide" (func $divide))
 (export "power" (func $power))
 (export "remainder" (func $remainder))
 (export "memory" (memory $0))
 (func $add (; 0 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (get_local $0)
   (get_local $1)
  )
 )
 (func $subtract (; 1 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.sub
   (get_local $0)
   (get_local $1)
  )
 )
 (func $multiply (; 2 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.mul
   (get_local $0)
   (get_local $1)
  )
 )
 (func $divide (; 3 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.div_s
   (get_local $0)
   (get_local $1)
  )
 )
 (func $power (; 4 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.xor
   (get_local $0)
   (get_local $1)
  )
 )
 (func $remainder (; 5 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (i32.rem_s
   (get_local $0)
   (get_local $1)
  )
 )
)
